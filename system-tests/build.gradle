buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.avast.gradle.docker-compose" version "0.9.1"
}


apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-allopen'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


dependencies {
    implementation project(':domain')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation group: 'com.github.docker-java', name: 'docker-java', version: '3.1.2'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    // required by docker java
    runtime 'javax.activation:javax.activation-api:1.2.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
        exclude module: 'mockito-core'
    }
}

test {
    useJUnitPlatform {
        excludeTags("system")
    }
}

task systemTest(type: Test) {}

systemTest {
    useJUnitPlatform {
        includeTags("system")
    }
}

dockerCompose {
    captureContainersOutput = false
    forceRecreate = true
//    stopContainers = false
//    removeContainers = false
}

check.dependsOn systemTest
dockerCompose.isRequiredBy(systemTest)

test.doFirst {
    dockerCompose.exposeAsEnvironment(test)
    dockerCompose.exposeAsSystemProperties(test)
}
